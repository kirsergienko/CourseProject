<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Add collection" xml:space="preserve">
    <value>Add collection</value>
  </data>
  <data name="Add item" xml:space="preserve">
    <value>Add item</value>
  </data>
  <data name="Add item to" xml:space="preserve">
    <value>Add item to</value>
  </data>
  <data name="Add new collection" xml:space="preserve">
    <value>Add new collection</value>
  </data>
  <data name="Added / Last changed:" xml:space="preserve">
    <value>Added / Last changed:</value>
  </data>
  <data name="Admin" xml:space="preserve">
    <value>Admin</value>
  </data>
  <data name="Admin info" xml:space="preserve">
    <value>Admin info</value>
  </data>
  <data name="Apply" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="Author" xml:space="preserve">
    <value>Author</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Biggest collections" xml:space="preserve">
    <value>Biggest collections</value>
  </data>
  <data name="Block" xml:space="preserve">
    <value>Block</value>
  </data>
  <data name="Blocked" xml:space="preserve">
    <value>Blocked</value>
  </data>
  <data name="Bool values count" xml:space="preserve">
    <value>Bool values count</value>
  </data>
  <data name="BoolType" xml:space="preserve">
    <value>Bool</value>
  </data>
  <data name="By date" xml:space="preserve">
    <value>By date</value>
  </data>
  <data name="By date descending" xml:space="preserve">
    <value>By date descending</value>
  </data>
  <data name="By likes" xml:space="preserve">
    <value>By likes</value>
  </data>
  <data name="By likes descending" xml:space="preserve">
    <value>By likes descending</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Change role" xml:space="preserve">
    <value>Change role</value>
  </data>
  <data name="Collection" xml:space="preserve">
    <value>Collection</value>
  </data>
  <data name="Collection id" xml:space="preserve">
    <value>Collection id</value>
  </data>
  <data name="Collection picture" xml:space="preserve">
    <value>Collection picture</value>
  </data>
  <data name="Collections" xml:space="preserve">
    <value>Collections</value>
  </data>
  <data name="Comment this item" xml:space="preserve">
    <value>Comment this item</value>
  </data>
  <data name="Comments" xml:space="preserve">
    <value>Comments</value>
  </data>
  <data name="Count" xml:space="preserve">
    <value>Count</value>
  </data>
  <data name="CourseProject" xml:space="preserve">
    <value>CourseProject</value>
  </data>
  <data name="Create" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="DateTime values count" xml:space="preserve">
    <value>DateTime values count</value>
  </data>
  <data name="DateType" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Delete collection" xml:space="preserve">
    <value>Delete collection</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Download to CSV format" xml:space="preserve">
    <value>Download to CSV format</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Edit collection" xml:space="preserve">
    <value>Edit collection</value>
  </data>
  <data name="Edit item" xml:space="preserve">
    <value>Edit item</value>
  </data>
  <data name="Format" xml:space="preserve">
    <value>Format: Month / Day / Year Hour: Minute: Second PM/ AM.Time is optional</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="Int values count" xml:space="preserve">
    <value>Int values count</value>
  </data>
  <data name="IntType" xml:space="preserve">
    <value>Int</value>
  </data>
  <data name="Is admin" xml:space="preserve">
    <value>Is admin</value>
  </data>
  <data name="Is blocked" xml:space="preserve">
    <value>Is blocked</value>
  </data>
  <data name="Item" xml:space="preserve">
    <value>Item</value>
  </data>
  <data name="Item from" xml:space="preserve">
    <value>Item from</value>
  </data>
  <data name="Items" xml:space="preserve">
    <value>Items</value>
  </data>
  <data name="Items Count" xml:space="preserve">
    <value>Items Count</value>
  </data>
  <data name="Items settings" xml:space="preserve">
    <value>Items settings</value>
  </data>
  <data name="Last added items" xml:space="preserve">
    <value>Last added items</value>
  </data>
  <data name="Likes" xml:space="preserve">
    <value>Likes</value>
  </data>
  <data name="List of users" xml:space="preserve">
    <value>List of users</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Look" xml:space="preserve">
    <value>Look</value>
  </data>
  <data name="MyProfile" xml:space="preserve">
    <value>My profile</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="Password confirmation" xml:space="preserve">
    <value>Password confirmation</value>
  </data>
  <data name="Please login" xml:space="preserve">
    <value>Please login</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="Registration" xml:space="preserve">
    <value>Registration</value>
  </data>
  <data name="Results for" xml:space="preserve">
    <value>Results for</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Send comment" xml:space="preserve">
    <value>Send comment</value>
  </data>
  <data name="Show" xml:space="preserve">
    <value>Show</value>
  </data>
  <data name="Show collection" xml:space="preserve">
    <value>Show collection</value>
  </data>
  <data name="Show item" xml:space="preserve">
    <value>Show item</value>
  </data>
  <data name="Sort" xml:space="preserve">
    <value>Sort</value>
  </data>
  <data name="String values count" xml:space="preserve">
    <value>String values count</value>
  </data>
  <data name="StringType" xml:space="preserve">
    <value>String</value>
  </data>
  <data name="Tag cloud" xml:space="preserve">
    <value>Tag cloud</value>
  </data>
  <data name="Tags" xml:space="preserve">
    <value>Tags</value>
  </data>
  <data name="Theme" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Unblock" xml:space="preserve">
    <value>Unblock</value>
  </data>
  <data name="Upload" xml:space="preserve">
    <value>Upload</value>
  </data>
  <data name="Upload image for collection" xml:space="preserve">
    <value>Upload image for collection</value>
  </data>
  <data name="User name" xml:space="preserve">
    <value>User name</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="Value" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="Wrong password or login" xml:space="preserve">
    <value>Wrong password or login</value>
  </data>
  <data name="You are blocked" xml:space="preserve">
    <value>You are blocked</value>
  </data>
  <data name="_Language" xml:space="preserve">
    <value>Language</value>
  </data>
</root>