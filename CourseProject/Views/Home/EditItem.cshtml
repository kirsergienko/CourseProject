@model CourseProject.Models.AddItemModel


<h4>Edit item</h4>
@using (Html.BeginForm())
{
    <table class="table-bordered">
        <tr>
            <td>
                Type
            </td>
            <td>
                Name
            </td>
            <td>
                Value
            </td>
        </tr>
        @for (int i = 0; i < Model.IntValues.Count; i++)
        {
            <tr>
                <td>Int</td>
                <td>
                    @Html.EditorFor(model => model.IntValues[i].Name)
                </td>
                <td>
                    @Html.EditorFor(model => model.IntValues[i].Value)
                </td>
                @Html.HiddenFor(model => model.IntValues[i].Name)
                @Html.HiddenFor(model => model.IntValues[i].Value)
                @Html.HiddenFor(model => model.IntValues[i].ItemId, new { id = "itemid", Value = Model.Id })
            </tr>
        }
        @for (int i = 0; i < Model.BoolValues.Count; i++)
        {
            <tr>
                <td>Bool</td>
                <td>
                    @Html.EditorFor(model => model.BoolValues[i].Name)
                </td>
                <td>
                    @Html.EditorFor(model => model.BoolValues[i].Value)
                </td>
                @Html.HiddenFor(model => model.BoolValues[i].Name)
                @Html.HiddenFor(model => model.BoolValues[i].Value)
                @Html.HiddenFor(model => model.BoolValues[i].ItemId, new { id = "itemid", Value = Model.Id })
            </tr>
        }
        @for (int i = 0; i < Model.StringValues.Count; i++)
        {
            <tr>
                <td>String</td>
                <td>
                    @Html.EditorFor(model => model.StringValues[i].Name)
                </td>
                <td>
                    @Html.EditorFor(model => model.StringValues[i].Value)
                </td>
                @Html.HiddenFor(model => model.StringValues[i].Name)
                @Html.HiddenFor(model => model.StringValues[i].Value)
                @Html.HiddenFor(model => model.StringValues[i].ItemId, new { id = "itemid", Value = Model.Id })
            </tr>
        }
        @for (int i = 0; i < Model.DateValues.Count; i++)
        {
            <tr>
                <td>Date</td>
                <td>
                    @Html.EditorFor(model => model.DateValues[i].Name)
                </td>
                <td>
                    @Html.EditorFor(model => model.DateValues[i].Value, new { Value = Model.DateValues[i].Value })
                </td>
                @Html.HiddenFor(model => model.DateValues[i].Name)
                @Html.HiddenFor(model => model.DateValues[i].Value)
                @Html.HiddenFor(model => model.DateValues[i].ItemId, new { id = "itemid", Value = Model.Id })
            </tr>
        }
    </table>
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.CollectionId)
    <input type="submit" value="Edit" />
}

<div>
    @Html.ActionLink("Cancel", "ShowCollection", new { id = Model.CollectionId })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

