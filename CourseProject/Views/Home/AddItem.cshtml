@model CourseProject.Models.AddItemModel

<script src="~/Scripts/jquery-3.4.1.js"></script>
<script src="~/Scripts/jquery-ui.min.js"></script>
<script src="~/Scripts/jquery-ui.js"></script>
<h4>Add item to @ViewBag.Title</h4>
@using (Html.BeginForm())
{
    <table class="table-bordered">
        <tr>
            <td>
                Type
            </td>
            <td>
                Name
            </td>
            <td>
                Value
            </td>
        </tr>
        @for (int i = 0; i < Model.IntValues.Count; i++)
        {
            <tr>
                <td>Int</td>
                <td>
                    @Html.EditorFor(model => model.IntValues[i].Name)
                </td>
                <td>
                    @Html.EditorFor(model => model.IntValues[i].Value)
                </td>
                @Html.HiddenFor(model => model.IntValues[i].Name)
                @Html.HiddenFor(model => model.IntValues[i].Value)
                @Html.HiddenFor(model => model.IntValues[i].ItemId, new { id = "itemid", Value = Model.Id })
            </tr>
        }
        @for (int i = 0; i < Model.BoolValues.Count; i++)
        {
            <tr>
                <td>Bool</td>
                <td>
                    @Html.EditorFor(model => model.BoolValues[i].Name)
                </td>
                <td>
                    @Html.EditorFor(model => model.BoolValues[i].Value)
                </td>
                @Html.HiddenFor(model => model.BoolValues[i].Name)
                @Html.HiddenFor(model => model.BoolValues[i].Value)
                @Html.HiddenFor(model => model.BoolValues[i].ItemId, new { id = "itemid", Value = Model.Id })
            </tr>
        }
        @for (int i = 0; i < Model.StringValues.Count; i++)
        {
            <tr>
                <td>String</td>
                <td>
                    @Html.EditorFor(model => model.StringValues[i].Name)
                </td>
                <td>
                    @Html.EditorFor(model => model.StringValues[i].Value)
                </td>
                @Html.HiddenFor(model => model.StringValues[i].Name)
                @Html.HiddenFor(model => model.StringValues[i].Value)
                @Html.HiddenFor(model => model.StringValues[i].ItemId, new { id = "itemid", Value = Model.Id })
            </tr>
        }
        @for (int i = 0; i < Model.DateValues.Count; i++)
        {
            <tr>
                <td>Date</td>
                <td>
                    @Html.EditorFor(model => model.DateValues[i].Name)
                </td>
                <td>
                    @Html.EditorFor(model => model.DateValues[i].Value)
                </td>
                @Html.HiddenFor(model => model.DateValues[i].Name)
                @Html.HiddenFor(model => model.DateValues[i].Value)
                @Html.ValidationMessageFor(model => model.DateValues[i].Value)
                @Html.HiddenFor(model => model.DateValues[i].ItemId, new { id = "itemid", Value = Model.Id })
            </tr>
        }
    </table>
    <p>(Format: Month / Day / Year Hour: Minute: Secong PM/ AM.Time is optional)</p>
    @Html.EditorFor(model => model.Tags, new { id = "tags" })
    @Html.HiddenFor(model => model.Tags)
    @Html.HiddenFor(model => model.Id, new { Value = ViewBag.Id })
    @Html.HiddenFor(model => model.CollectionId)
    <input type="submit" value="Add" />
}

<div>
    @Html.ActionLink("Cancel", "DeleteItem", new { id = Model.Id })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
    $("#tags").autocomplete({
        source: function (request, response) {
            $ . ajax ({
                url: '@Url.Action("Tags","Home")',
                dataType: "json",
                data: { search: $("#tags").val() },
                success: function (data) {
                    response($.map(data, function (item) {
                        return { label: item.Tag, value: item.Tag };
                    }));
                },
                error: function (xhr, status, error) {
                    alert("Error");
                }
            });
        }
    });
    </script>
}

