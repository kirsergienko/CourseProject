@model CourseProject.Models.Collection
    @using CourseProject.Resources
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>@Language.Edit_collection</title>
    <link href="@Url.Content("~/Content/site.css")" rel="stylesheet" type="text/css" />
    <script src="~/Scripts/dropzone/dropzone.min.js"></script>
    <script src="~/Scripts/jquery-3.4.1.js"></script>
    <link href="~/Scripts/dropzone/dropzone.css" rel="stylesheet" />
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <h4>@Language.Edit_collection @Model.Title</h4>
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Title, new { @id = "title" })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        <div>
            @Language.Description:
            @Html.TextAreaFor(model => model.Description, new { id = "editor" })
        </div>
        <p>@Language.Upload_image_for_collection:</p>
            <div class="dropzone" id="my-dropzone" method="post"></div>
            @Html.HiddenFor(model => model.Image, new { id = "img" })
            <div>
                <button type="button" id="submit-all"> @Language.Upload </button>
            </div>
            @Html.HiddenFor(model => model.UserId)
            <div>
                @Language.Theme:
                @Html.DropDownListFor(model => model.Theme, (IEnumerable<SelectListItem>)new SelectList(ViewBag.Themes))
            </div>
            <h4>@Language.Items_settings:</h4>
            <div>
                @Language.Int_values_count:
                @Html.EditorFor(model => model.IntValuesCount)
                @Html.ValidationMessageFor(model => model.IntValuesCount, "", new { @class = "text-danger" })
            </div>
            <div>
                @Language.String_values_count:
                @Html.EditorFor(model => model.StringValuesCount)
                @Html.ValidationMessageFor(model => model.StringValuesCount, "", new { @class = "text-danger" })
            </div>
            <div>
                @Language.Bool_values_count:
                @Html.EditorFor(model => model.BoolValuesCount)
                @Html.ValidationMessageFor(model => model.BoolValuesCount, "", new { @class = "text-danger" })
            </div>
            <div>
                @Language.DateTime_values_count:
                @Html.EditorFor(model => model.DateValuesCount)
                @Html.ValidationMessageFor(model => model.DateValuesCount, "", new { @class = "text-danger" })
            </div>
        </div>
        <div>
            <button type="submit"> @Language.Apply </button>
        </div>
    }
    <div>
        @Html.ActionLink(@Language.Cancel, "ShowCollection", new { id = Model.Id })
    </div>
</body>
</html>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        Dropzone.options.myDropzone = {
            url: "@Url.Action("Upload", "Home")",
            maxFiles: 1,
            addRemoveLinks: true,
            autoProcessQueue: false,
            uploadMultiple: false,
            parallelUploads: 1,

            init: function () {
                var submitButton = document.querySelector("#submit-all")
                myDropzone = this;

                submitButton.addEventListener("click", function () {
                    myDropzone.processQueue();
                });
                this.on("complete", function (data) {
                    var res = eval('(' + data.xhr.responseText + ')');
                    $('#img').val(res.Message);
                });
            }
        };
        vClassicEditor.create(document.querySelector('#editor'))
            .then(editor => {
                console.log(editor);
            })
            .catch(error => {
                console.error(error);
            });
    </script>
}


